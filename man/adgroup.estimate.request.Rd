% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adgroup.estimate.request.R
\name{adgroup.estimate.request}
\alias{adgroup.estimate.request}
\alias{as.adgroup.estimate.request}
\alias{as.adgroup.estimate.request.data.frame}
\alias{as.adgroup.estimate.request.default}
\alias{is.adgroup.estimate.request}
\title{Adwords Adgroup Estimate Request}
\usage{
adgroup.estimate.request(ker, adgroup.id = NULL, max.cpc = NULL)

as.adgroup.estimate.request(x, ...)

\method{as.adgroup.estimate.request}{data.frame}(x, adgroup.id,
  campaign.id, ...)

\method{as.adgroup.estimate.request}{default}(x, ...)

is.adgroup.estimate.request(x)
}
\arguments{
\item{ker}{The keyword.estimate.request objects to put into a adgroup.estimate.request.}

\item{adgroup.id}{The ID for the adgroup. When converting a data frame, this parameter will override the existing column with adgroup ids, remove it if NULL or leave the column intact if missing (which is the default).}

\item{max.cpc}{The bid for the adgroup.}
}
\value{
A S3 of type adgroup.estimate.request.
}
\description{
Creates or coerces S3 objects of type \code{adgroup.estimate.request} for the Adwords API.
\code{is.adgroup.estimate.request} will test if an object is interpretable as an adgroup.estimate.request.
When coercing to an adgroup.estimate.request, max.cpc will be applied to the adgroup.estimate.request.
To supply a max.cpc to the keywords, use argument keyword.max.cpc instead.
}
\examples{
# Minimal example
k1 <- keyword("Example")
ker1 <- keyword.estimate.request(k1)
aer1 <- adgroup.estimate.request(ker1)

# More complex example
k2 <- keyword(c("Example", "Sample", "Test", "Only a test"), match.type = "PHRASE")
ker2 <- keyword.estimate.request(k2, max.cpc = max.cpc(c(1, 2, 1, 3), use.micro = TRUE))
aer2 <- adgroup.estimate.request(ker2, adgroup.id = 12345)

# Coercing to an adgroup.estimate.request
aer3 <- as.adgroup.estimate.request("Convert", is.negative = TRUE, match.type = "EXACT", max.cpc = 500000)

# Checking an adgroup.estimate.request
is.adgroup.estimate.request(aer3)
}
